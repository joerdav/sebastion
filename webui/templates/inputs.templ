package templates

import (
	"fmt"
	"strings"

	"github.com/joerdav/sebastion"
)

func inputId(name string) string {
	return strings.Join(strings.Fields(name), "-")
}

templ InputWrapper(name string, c templ.Component) {
	<div class="field" id={ inputId(name) }>
		@c
	</div>
}

templ ReplaceInput(name string, c templ.Component) {
	<turbo-stream action="update" targets={ fmt.Sprintf("#%s", inputId(name)) }>
		<template>
			@c
		</template>
	</turbo-stream>
}

templ StringInput(s sebastion.Input, e string) {
	<label class="label">{ s.Name }</label>
	if e != "" {
		<p class="help is-danger">{ e }</p>
	}
	<div class="control"><input name={ s.Name } class="input" value={ s.Value.String() } type="text" placeholder={ s.Name }/></div>
	<p class="help">{ s.Description }</p>
}

templ IntInput(s sebastion.Input, e string) {
	<label class="label">{ s.Name }</label>
	if e != "" {
		<p class="help is-danger">{ e }</p>
	}
	<div class="control"><input name={ s.Name } class="input" value={ s.Value.String() } type="number" placeholder={ s.Name }/></div>
	<p class="help">{ s.Description }</p>
}

templ BoolInput(s sebastion.Input, e string) {
	<div class="control"><label class="label">{ s.Name }</label><input name={ s.Name } value={ s.Value.String() } type="checkbox"/></div>
	if e != "" {
		<p class="help is-danger">{ e }</p>
	}
	<p class="help">{ s.Description }</p>
}

templ MultiStringInput(s sebastion.Input, e string) {
	<label class="label">{ s.Name }</label>
	if e != "" {
		<p class="help is-danger">{ e }</p>
	}
	<div class="select"><select name={ s.Name } value={ s.Value.String() }>
	for _, o := range s.Value.(sebastion.MultiStringSelect).Options {
		<option>{ o }</option>
	}
</select></div>
	<p class="help">{ s.Description }</p>
}

